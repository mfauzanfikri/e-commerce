// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  roleId   Int    @map("role_id")

  role        Role          @relation(fields: [roleId], references: [id])
  transaction Transaction[]

  @@map("user")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String

  user User[]

  @@map("role")
}

model Product {
  id         Int      @id @default(autoincrement())
  name       String
  price      Float
  categoryId Int      @map("category_id")
  stock      Int
  active     Boolean  @default(false)
  createdAt  DateTime @default(now()) @map("created_at")

  category Category @relation(fields: [categoryId], references: [id])

  purchasedProduct PurchasedProduct[]

  @@map("product")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  product Product[]
}

model Transaction {
  id          Int      @id @default(autoincrement())
  refNo       String   @unique
  userId      Int
  grossAmount Float    @map("gross_amount")
  totalPrice  Float    @map("total_price")
  createdAt   DateTime @default(now()) @map("created_at")

  user             User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  purchasedProduct PurchasedProduct[]

  @@map("transaction")
}

model PurchasedProduct {
  id            Int @id @default(autoincrement())
  productId     Int @map("product_id")
  transactionId Int @map("transaction_id")
  quantity      Int

  product     Product     @relation(fields: [productId], references: [id])
  transaction Transaction @relation(fields: [transactionId], references: [id])

  @@unique([productId, transactionId])
  @@map("purchased_product")
}
